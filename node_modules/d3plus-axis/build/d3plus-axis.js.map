{"version":3,"file":"d3plus-axis.js","sources":["../src/date.js","../src/locale.js","../src/Axis.js","../src/AxisBottom.js","../src/AxisLeft.js","../src/AxisRight.js","../src/AxisTop.js"],"sourcesContent":["/**\n    @function date\n    @summary Parses numbers and strings to valid Javascript Date objects.\n    @description Returns a javascript Date object for a given a Number (representing either a 4-digit year or milliseconds since epoch), a String representing a Quarter (ie. \"Q2 1987\", mapping to the last day in that quarter), or a String that is in [valid dateString format](http://dygraphs.com/date-formats.html). Besides the 4-digit year parsing, this function is useful when needing to parse negative (BC) years, which the vanilla Date object cannot parse.\n    @param {Number|String} *date*\n*/\nexport default function(d) {\n\n  // returns if already Date object\n  if (d.constructor === Date) return d;\n  // detects if milliseconds\n  else if (d.constructor === Number && `${d}`.length > 5 && d % 1 === 0) return new Date(d);\n\n  let s = `${d}`;\n\n  // tests for MM/DD/YYYY and MM-DD-YYYY format\n  const dayFormat = new RegExp(/^\\d{1,2}[./-]\\d{1,2}[./-](-*\\d{1,4})$/g).exec(s);\n  if (dayFormat) {\n    const year = dayFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substring(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // tests for full Date object string format\n  const strFormat = new RegExp(/^[A-z]{1,3} [A-z]{1,3} \\d{1,2} (-*\\d{1,4}) \\d{1,2}:\\d{1,2}:\\d{1,2} [A-z]{1,3}-*\\d{1,4} \\([A-z]{1,3}\\)/g).exec(s);\n  if (strFormat) {\n    const year = strFormat[1];\n    if (year.indexOf(\"-\") === 0) s = s.replace(year, year.substring(1));\n    const date = new Date(s);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // tests for quarterly formats (ie. \"QX YYYY\")\n  const quarterPrefix = new RegExp(/^([qQ]{1}[1-4]{1}|[1-4]{1}[qQ]{1})[\\s|-]{0,1}(-*\\d{1,4})$/g).exec(s);\n  const quarterSuffix = new RegExp(/^(-*\\d{1,4})[\\s|-]{0,1}([qQ]{1}[1-4]{1}|[1-4]{1}[qQ]{1})$/g).exec(s);\n  if (quarterPrefix || quarterSuffix) {\n    const quarter = +(quarterPrefix ? quarterPrefix[1] : quarterSuffix[2]).toLowerCase().replace(\"q\", \"\");\n    const year = +(quarterPrefix ? quarterPrefix[2] : quarterSuffix[1]);\n    const date = new Date(year, quarter * 3 - 3, 1);\n    date.setFullYear(year);\n    return date;\n  }\n\n  // detects if only passing a year value\n  if (!s.includes(\"/\") && !s.includes(\" \") && (!s.includes(\"-\") || !s.indexOf(\"-\"))) {\n    const date = new Date(+s, 0, 1);\n    date.setFullYear(d);\n    return date;\n  }\n\n  // falls back to Date object\n  return new Date(s);\n\n}\n","export default {\n  \"de-DE\": {\n    dateTime: \"%A, der %e. %B %Y, %X\",\n    date: \"%d.%m.%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sonntag\",\n      \"Montag\",\n      \"Dienstag\",\n      \"Mittwoch\",\n      \"Donnerstag\",\n      \"Freitag\",\n      \"Samstag\"\n    ],\n    shortDays: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n    months: [\n      \"Januar\",\n      \"Februar\",\n      \"März\",\n      \"April\",\n      \"Mai\",\n      \"Juni\",\n      \"Juli\",\n      \"August\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"Dezember\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mrz\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Okt\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  },\n  \"en-GB\": {\n    dateTime: \"%a %e %b %X %Y\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"en-US\": {\n    dateTime: \"%x, %X\",\n    date: \"%-m/%-d/%Y\",\n    time: \"%-I:%M:%S %p\",\n    quarter: \"Q\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ],\n    shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    months: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ]\n  },\n  \"es-ES\": {\n    dateTime: \"%A, %e de %B de %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"es-MX\": {\n    dateTime: \"%x, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%-I:%M:%S %p\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"domingo\",\n      \"lunes\",\n      \"martes\",\n      \"miércoles\",\n      \"jueves\",\n      \"viernes\",\n      \"sábado\"\n    ],\n    shortDays: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n    months: [\n      \"enero\",\n      \"febrero\",\n      \"marzo\",\n      \"abril\",\n      \"mayo\",\n      \"junio\",\n      \"julio\",\n      \"agosto\",\n      \"septiembre\",\n      \"octubre\",\n      \"noviembre\",\n      \"diciembre\"\n    ],\n    shortMonths: [\n      \"ene\",\n      \"feb\",\n      \"mar\",\n      \"abr\",\n      \"may\",\n      \"jun\",\n      \"jul\",\n      \"ago\",\n      \"sep\",\n      \"oct\",\n      \"nov\",\n      \"dic\"\n    ]\n  },\n  \"fr-FR\": {\n    dateTime: \"%A, le %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"dimanche\",\n      \"lundi\",\n      \"mardi\",\n      \"mercredi\",\n      \"jeudi\",\n      \"vendredi\",\n      \"samedi\"\n    ],\n    shortDays: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n    months: [\n      \"janvier\",\n      \"février\",\n      \"mars\",\n      \"avril\",\n      \"mai\",\n      \"juin\",\n      \"juillet\",\n      \"août\",\n      \"septembre\",\n      \"octobre\",\n      \"novembre\",\n      \"décembre\"\n    ],\n    shortMonths: [\n      \"janv.\",\n      \"févr.\",\n      \"mars\",\n      \"avr.\",\n      \"mai\",\n      \"juin\",\n      \"juil.\",\n      \"août\",\n      \"sept.\",\n      \"oct.\",\n      \"nov.\",\n      \"déc.\"\n    ]\n  },\n  \"it-IT\": {\n    dateTime: \"%A %e %B %Y, %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domenica\",\n      \"Lunedì\",\n      \"Martedì\",\n      \"Mercoledì\",\n      \"Giovedì\",\n      \"Venerdì\",\n      \"Sabato\"\n    ],\n    shortDays: [\"Dom\", \"Lun\", \"Mar\", \"Mer\", \"Gio\", \"Ven\", \"Sab\"],\n    months: [\n      \"Gennaio\",\n      \"Febbraio\",\n      \"Marzo\",\n      \"Aprile\",\n      \"Maggio\",\n      \"Giugno\",\n      \"Luglio\",\n      \"Agosto\",\n      \"Settembre\",\n      \"Ottobre\",\n      \"Novembre\",\n      \"Dicembre\"\n    ],\n    shortMonths: [\n      \"Gen\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mag\",\n      \"Giu\",\n      \"Lug\",\n      \"Ago\",\n      \"Set\",\n      \"Ott\",\n      \"Nov\",\n      \"Dic\"\n    ]\n  },\n  \"pt-BR\": {\n    dateTime: \"%A, %e de %B de %Y. %X\",\n    date: \"%d/%m/%Y\",\n    time: \"%H:%M:%S\",\n    quarter: \"T\",\n    periods: [\"AM\", \"PM\"],\n    days: [\n      \"Domingo\",\n      \"Segunda\",\n      \"Terça\",\n      \"Quarta\",\n      \"Quinta\",\n      \"Sexta\",\n      \"Sábado\"\n    ],\n    shortDays: [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"Sáb\"],\n    months: [\n      \"Janeiro\",\n      \"Fevereiro\",\n      \"Março\",\n      \"Abril\",\n      \"Maio\",\n      \"Junho\",\n      \"Julho\",\n      \"Agosto\",\n      \"Setembro\",\n      \"Outubro\",\n      \"Novembro\",\n      \"Dezembro\"\n    ],\n    shortMonths: [\n      \"Jan\",\n      \"Fev\",\n      \"Mar\",\n      \"Abr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Ago\",\n      \"Set\",\n      \"Out\",\n      \"Nov\",\n      \"Dez\"\n    ]\n  }\n};\n","/**\n    @external BaseClass\n    @see https://github.com/d3plus/d3plus-common#BaseClass\n*/\n\nimport {extent, max, min, range as d3Range, ticks as d3Ticks} from \"d3-array\";\nimport {timeFormatDefaultLocale} from \"d3-time-format\";\nimport * as scales from \"d3-scale\";\nimport {select} from \"d3-selection\";\nimport {transition} from \"d3-transition\";\n\nimport {assign, attrize, BaseClass, closest, constant, elem} from \"d3plus-common\";\nimport {colorDefaults} from \"d3plus-color\";\nimport {formatAbbreviate, formatDate, formatLocale} from \"d3plus-format\";\nimport * as shapes from \"d3plus-shape\";\nimport {rtl as detectRTL, TextBox, textWrap} from \"d3plus-text\";\n\nimport {default as date} from \"./date\";\nimport {default as locale} from \"./locale\";\n\nconst floorPow = d => Math.pow(10, Math.floor(Math.log10(d)));\n\n/**\n * Calculates ticks from a given scale (negative and/or positive)\n * @param {scale} scale A d3-scale object\n * @private\n */\nfunction calculateTicks(scale, useData = false) {\n\n  const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n  const negativeRange = scale.range();\n  const size = Math.abs(negativeRange[1] - negativeRange[0]);\n  let step = Math.floor(size / tickScale(size));\n\n  if (this._scale === \"time\" && this._data && this._data.length) {\n    const dataExtent = extent(this._data);\n    const distance = this._data.reduce((n, d, i, arr) => {\n      if (i) {\n        const dist = Math.abs(d - arr[i - 1]);\n        if (dist < n) n = dist;\n      }\n      return n;\n    }, Infinity);\n    const newStep = Math.round((dataExtent[1] - dataExtent[0]) / distance);\n    step = useData ? min([step * 2, newStep]) : min([step, newStep]);\n  }\n  return scale.ticks(step);\n}\n\n/**\n    @class Axis\n    @extends external:BaseClass\n    @desc Creates an SVG scale based on an array of data.\n*/\nexport default class Axis extends BaseClass {\n\n  /**\n      @memberof Axis\n      @desc Invoked when creating a new class instance, and sets any default parameters.\n      @private\n  */\n  constructor() {\n\n    super();\n\n    this._align = \"middle\";\n    this._barConfig = {\n      \"stroke\": \"#999\",\n      \"stroke-width\": 1\n    };\n    this._data = [];\n    this._domain = [0, 10];\n    this._duration = 600;\n    this._gridConfig = {\n      \"stroke\": \"#eee\",\n      \"stroke-width\": 1\n    };\n    this._gridLog = false;\n    this._height = 400;\n    this._labelOffset = false;\n    this._labelRotation = false;\n    this.orient(\"bottom\");\n    this._outerBounds = {width: 0, height: 0, x: 0, y: 0};\n    this._padding = 5;\n    this._paddingInner = 0.1;\n    this._paddingOuter = 0.1;\n    this._scale = \"linear\";\n    this._scalePadding = 0.5;\n    this._shape = \"Line\";\n    this._shapeConfig = {\n      fill: \"#999\",\n      height: d => d.tick ? 8 : 0,\n      label: d => d.text,\n      labelBounds: d => d.labelBounds,\n      labelConfig: {\n        fontColor: \"#999\",\n        fontFamily: new TextBox().fontFamily(),\n        fontResize: false,\n        fontSize: constant(14),\n        padding: 0,\n        textAnchor: () => {\n          const rtl = detectRTL();\n          return this._orient === \"left\" ? rtl ? \"start\" : \"end\"\n            : this._orient === \"right\" ? rtl ? \"end\" : \"start\"\n            : this._labelRotation ? this._orient === \"bottom\" ? \"end\" : \"start\" : \"middle\";\n        },\n        verticalAlign: () => this._orient === \"bottom\" ? \"top\" : this._orient === \"top\" ? \"bottom\" : \"middle\"\n      },\n      r: d => d.tick ? 4 : 0,\n      stroke: \"#999\",\n      strokeWidth: 1,\n      width: d => d.tick ? 8 : 0\n    };\n    this._tickSize = 8;\n    this._tickSuffix = \"normal\";\n    this._tickUnit = 0;\n    this._timeLocale = undefined;\n    this._titleClass = new TextBox();\n    this._titleConfig = {\n      fontColor: colorDefaults.dark,\n      fontSize: 12,\n      textAnchor: \"middle\"\n    };\n    this._width = 400;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the axis bar.\n      @param {D3Selection} *bar*\n      @private\n  */\n  _barPosition(bar) {\n\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset;\n\n    const x1mod = this._scale === \"band\" ? this._d3Scale.step() - this._d3Scale.bandwidth()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const x2mod = this._scale === \"band\" ? this._d3Scale.step()\n      : this._scale === \"point\" ? this._d3Scale.step() * this._d3Scale.padding()\n      : 0;\n\n    const sortedDomain = (this._d3ScaleNegative ? this._d3ScaleNegative.domain() : []).concat(this._d3Scale ? this._d3Scale.domain() : []).sort((a, b) => a - b);\n\n    bar\n      .call(attrize, this._barConfig)\n      .attr(`${x}1`, this._getPosition(sortedDomain[0]) - x1mod)\n      .attr(`${x}2`, this._getPosition(sortedDomain[sortedDomain.length - 1]) + x2mod)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, position);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's domain, taking into account negative and positive log scales.\n      @private\n  */\n  _getDomain() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.domain();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.domain());\n\n    const domain = [\"band\", \"ordinal\", \"point\"].includes(this._scale) ? ticks : extent(ticks);\n    return ticks[0] > ticks[1] ? domain.reverse() : domain;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns a value's scale position, taking into account negative and positive log scales.\n      @param {Number|String} *d*\n      @private\n  */\n  _getPosition(d) {\n    return this._scale === \"log\" && d === 0 ? (this._d3Scale || this._d3ScaleNegative).range()[this._d3Scale ? 0 : 1] : (this._scale === \"log\" && d < 0 ? this._d3ScaleNegative : this._d3Scale)(d);\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's range, taking into account negative and positive log scales.\n      @private\n  */\n  _getRange() {\n\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = this._d3ScaleNegative.range();\n    if (this._d3Scale) ticks = ticks.concat(this._d3Scale.range());\n    return ticks[0] > ticks[1] ? extent(ticks).reverse() : extent(ticks);\n\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's labels, taking into account negative and positive log scales.\n      @private\n  */\n  _getLabels() {\n    let labels = [];\n    if (this._d3ScaleNegative) labels = labels.concat(calculateTicks.bind(this)(this._d3ScaleNegative, false));\n    if (this._d3Scale) labels = labels.concat(calculateTicks.bind(this)(this._d3Scale, false));\n    return labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc Returns the scale's ticks, taking into account negative and positive log scales.\n      @private\n  */\n  _getTicks() {\n    let ticks = [];\n    if (this._d3ScaleNegative) ticks = ticks.concat(calculateTicks.bind(this)(this._d3ScaleNegative, true));\n    if (this._d3Scale) ticks = ticks.concat(calculateTicks.bind(this)(this._d3Scale, true));\n    return ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets positioning for the grid lines.\n      @param {D3Selection} *lines*\n      @private\n  */\n  _gridPosition(lines, last = false) {\n    const {height, x, y, opposite} = this._position,\n          offset = this._margin[opposite],\n          position = [\"top\", \"left\"].includes(this._orient) ? this._outerBounds[y] + this._outerBounds[height] - offset : this._outerBounds[y] + offset,\n          scale = last ? this._lastScale || this._getPosition.bind(this) : this._getPosition.bind(this),\n          size = [\"top\", \"left\"].includes(this._orient) ? offset : -offset,\n          xDiff = this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0,\n          xPos = d => scale(d.id) + xDiff;\n    lines\n      .call(attrize, this._gridConfig)\n      .attr(`${x}1`, xPos)\n      .attr(`${x}2`, xPos)\n      .attr(`${y}1`, position)\n      .attr(`${y}2`, last ? position : position + size);\n  }\n\n  /**\n      @memberof Axis\n      @desc Renders the current Axis to the page. If a *callback* is specified, it will be called once the legend is done drawing.\n      @param {Function} [*callback* = undefined]\n      @chainable\n  */\n  render(callback) {\n\n    /**\n     * Creates an SVG element to contain the axis if none\n     * has been specified using the \"select\" method.\n     */\n    if (this._select === void 0) {\n      this.select(select(\"body\").append(\"svg\")\n        .attr(\"width\", `${this._width}px`)\n        .attr(\"height\", `${this._height}px`)\n        .node());\n    }\n\n    const timeLocale = this._timeLocale || locale[this._locale] || locale[\"en-US\"];\n    timeFormatDefaultLocale(timeLocale).format();\n\n    /**\n     * Declares some commonly used variables.\n     */\n    const {width, height, x, y, horizontal, opposite} = this._position,\n          clipId = `d3plus-Axis-clip-${this._uuid}`,\n          flip = [\"top\", \"left\"].includes(this._orient),\n          p = this._padding,\n          parent = this._select,\n          rangeOuter = [p, this[`_${width}`] - p],\n          t = transition().duration(this._duration);\n\n    const tickValue = this._shape === \"Circle\" ? this._shapeConfig.r\n      : this._shape === \"Rect\" ? this._shapeConfig[width]\n      : this._shapeConfig.strokeWidth;\n    const tickGet = typeof tickValue !== \"function\" ? () => tickValue : tickValue;\n\n    /**\n     * Zeros out the margins for re-calculation.\n     */\n    const margin = this._margin = {top: 0, right: 0, bottom: 0, left: 0};\n\n    let labels, range, ticks;\n\n    /**\n     * Constructs the tick formatter function.\n     */\n    const tickFormat = this._tickFormat ? this._tickFormat : d => {\n      if (isNaN(d) || [\"band\", \"ordinal\", \"point\"].includes(this._scale)) {\n        return d;\n      }\n      else if (this._scale === \"time\") {\n        return formatDate(d, (this._data || labels).map(date)).replace(/^Q/g, timeLocale.quarter);\n      }\n      else if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const locale = typeof this._locale === \"object\" ? this._locale : formatLocale[this._locale];\n        const {separator, suffixes} = locale;\n        const suff = d >= 1000 ? suffixes[this._tickUnit + 8] : \"\";\n        const tick = d / Math.pow(10, 3 * this._tickUnit);\n        const number = formatAbbreviate(tick, locale, `,.${tick.toString().length}r`);\n        return `${number}${separator}${suff}`;\n      }\n      else {\n        return formatAbbreviate(d, this._locale);\n      }\n    };\n\n    /**\n     * (Re)calculates the internal d3 scale\n     * @param {} newRange\n     */\n    function setScale(newRange = this._range) {\n\n      /**\n       * Calculates the internal \"range\" array to use, including\n       * fallbacks if not specified with the \"range\" method.\n       */\n      range = newRange ? newRange.slice() : [undefined, undefined];\n      let [minRange, maxRange] = rangeOuter;\n      if (this._range) {\n        if (this._range[0] !== undefined) minRange = this._range[0];\n        if (this._range[this._range.length - 1] !== undefined) maxRange = this._range[this._range.length - 1];\n      }\n      if (range[0] === undefined || range[0] < minRange) range[0] = minRange;\n      if (range[1] === undefined || range[1] > maxRange) range[1] = maxRange;\n      const sizeInner = maxRange - minRange;\n      if (this._scale === \"ordinal\" && this._domain.length > range.length) {\n        if (newRange === this._range) {\n          const buckets = this._domain.length + 1;\n          range = d3Range(buckets)\n            .map(d => range[0] + sizeInner * (d / (buckets - 1)))\n            .slice(1, buckets);\n          range = range.map(d => d - range[0] / 2);\n        }\n        else {\n          const buckets = this._domain.length;\n          const size = range[1] - range[0];\n          range = d3Range(buckets)\n            .map(d => range[0] + size * (d / (buckets - 1)));\n        }\n      }\n      else if (newRange === this._range) {\n        const tickScale = scales.scaleSqrt().domain([10, 400]).range([10, 50]);\n        const domain = this._scale === \"time\" ? this._domain.map(date) : this._domain;\n        const scaleTicks = d3Ticks(domain[0], domain[1], Math.floor(sizeInner / tickScale(sizeInner)));\n        ticks = (this._ticks\n          ? this._scale === \"time\" ? this._ticks.map(date) : this._ticks\n          : scaleTicks).slice();\n\n        labels = (this._labels\n          ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n          : scaleTicks).slice();\n        const buckets = labels.length;\n\n        if (buckets) {\n          const pad = Math.ceil(sizeInner / buckets / 2);\n          range = [range[0] + pad, range[1] - pad];\n        }\n\n      }\n\n      /**\n       * Sets up the initial d3 scale, using this._domain and the\n       * previously defined range variable.\n       */\n      const scale = `scale${this._scale.charAt(0).toUpperCase()}${this._scale.slice(1)}`;\n\n      this._d3Scale = scales[scale]()\n        .domain(this._scale === \"time\" ? this._domain.map(date) : this._domain)\n        .range(range);\n\n      if (this._d3Scale.padding) this._d3Scale.padding(this._scalePadding);\n      if (this._d3Scale.paddingInner) this._d3Scale.paddingInner(this._paddingInner);\n      if (this._d3Scale.paddingOuter) this._d3Scale.paddingOuter(this._paddingOuter);\n\n      /**\n       * Constructs a separate \"negative only\" scale for logarithmic\n       * domains, as they cannot pass zero.\n       */\n      this._d3ScaleNegative = null;\n      if (this._scale === \"log\") {\n        const domain = this._d3Scale.domain();\n        if (domain[0] === 0) {\n          const smallestNumber = min([min(this._data), Math.abs(domain[1])]);\n          domain[0] = smallestNumber === 0 || smallestNumber === 1 ? 1e-6 : smallestNumber <= 1 ? floorPow(smallestNumber) : 1;\n          if (domain[1] < 0) domain[0] *= -1;\n        }\n        else if (domain[domain.length - 1] === 0) {\n          const smallestNumber = min([min(this._data), Math.abs(domain[0])]);\n          domain[domain.length - 1] = smallestNumber === 0 || smallestNumber === 1 ? 1e-6 : smallestNumber <= 1 ? floorPow(smallestNumber) : 1;\n          if (domain[0] < 0) domain[domain.length - 1] *= -1;\n        }\n        const range = this._d3Scale.range();\n        if (domain[0] < 0 && domain[domain.length - 1] < 0) {\n          this._d3ScaleNegative = this._d3Scale.copy()\n            .domain(domain)\n            .range(range);\n          this._d3Scale = null;\n        }\n        else if (domain[0] > 0 && domain[domain.length - 1] > 0) {\n          this._d3Scale\n            .domain(domain)\n            .range(range);\n        }\n        else {\n          const percentScale = scales.scaleLinear()\n            .domain(domain)\n            .range([0, 1]);\n          const leftPercentage = percentScale(0);\n          const zero = leftPercentage * (range[1] - range[0]);\n          const smallestPositive = min([min(this._data.filter(d => d >= 0)), Math.abs(domain[1])]);\n          const smallestNegative = min([min(this._data.filter(d => d <= -0)), Math.abs(domain[0])]);\n          const smallestPosPow = smallestPositive === 0 ? 1e-6 : smallestPositive <= 1 ? floorPow(smallestPositive) : 1;\n          const smallestNegPow = smallestNegative === 0 ? -1e-6 : smallestNegative <= 1 ? floorPow(smallestNegative) : 1;\n          const smallestNumber = min([smallestPosPow, smallestNegPow]);\n          this._d3ScaleNegative = this._d3Scale.copy();\n          (domain[0] < 0 ? this._d3Scale : this._d3ScaleNegative)\n            .domain([domain[0] < 0 ? smallestNumber : -smallestNumber, domain[1]])\n            .range([range[0] + zero, range[1]]);\n          (domain[0] < 0 ? this._d3ScaleNegative : this._d3Scale)\n            .domain([domain[0], domain[0] < 0 ? -smallestNumber : smallestNumber])\n            .range([range[0], range[0] + zero]);\n        }\n      }\n\n      /**\n       * Determines the of values array to use\n       * for the \"ticks\" and the \"labels\"\n       */\n      ticks = (this._ticks\n        ? this._scale === \"time\" ? this._ticks.map(date) : this._ticks\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getTicks() : this._domain).slice();\n\n      labels = (this._labels\n        ? this._scale === \"time\" ? this._labels.map(date) : this._labels\n        : (this._d3Scale ? this._d3Scale.ticks : this._d3ScaleNegative.ticks)\n          ? this._getLabels() : ticks).slice();\n\n      if (this._scale === \"log\") {\n        const tens = labels.filter((t, i) =>\n          !i || i === labels.length - 1 ||\n          Math.abs(t).toString().charAt(0) === \"1\" &&\n          (this._d3Scale ? t !== -1 : t !== 1)\n        );\n        if (tens.length > 2) {\n          labels = tens;\n        }\n        else if (labels.length >= 10) {\n          labels = labels.filter(t => t % 5 === 0 || tickFormat(t).substr(-1) === \"1\");\n        }\n        if (labels.includes(-1) && labels.includes (1) && labels.some(d => d > 10 || d < 10)) {\n          labels.splice(labels.indexOf(-1), 1);\n        }\n      }\n      if (this._scale === \"time\") {\n        ticks = ticks.map(Number);\n        labels = labels.map(Number);\n      }\n      ticks = ticks.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n      labels = labels.sort((a, b) => this._getPosition(a) - this._getPosition(b));\n\n      /**\n       * Get the smallest suffix.\n       */\n      if (this._scale === \"linear\" && this._tickSuffix === \"smallest\") {\n        const suffixes = labels.filter(d => d >= 1000);\n        if (suffixes.length > 0) {\n          const min = Math.min(...suffixes);\n          let i = 1;\n          while (i && i < 7) {\n            const n = Math.pow(10, 3 * i);\n            if (min / n >= 1) {\n              this._tickUnit = i;\n              i += 1;\n            }\n            else {\n              break;\n            }\n          }\n        }\n      }\n\n      /**\n       * Removes ticks when they overlap other ticks.\n       */\n      const pixels = [];\n      this._availableTicks = ticks;\n      ticks.forEach((d, i) => {\n        let s = tickGet({id: d, tick: true}, i);\n        if (this._shape === \"Circle\") s *= 2;\n        const t = this._getPosition(d);\n        if (!pixels.length || Math.abs(closest(t, pixels) - t) > s * 2) pixels.push(t);\n        else pixels.push(false);\n      });\n      ticks = ticks.filter((d, i) => pixels[i] !== false);\n      this._visibleTicks = ticks;\n\n    }\n    setScale.bind(this)();\n\n    /**\n     * Calculates the space available for a given label.\n     * @param {Object} datum\n     */\n    function calculateSpace(datum, diff = 1) {\n      const {i, position} = datum;\n      if (this._scale === \"band\") {\n        return this._d3Scale.bandwidth();\n      }\n      else {\n        const prevPosition = i - diff < 0 ? textData.length === 1 || !this._range ? rangeOuter[0] : (position - textData[i + diff].position) / 2 - position : position - (position - textData[i - diff].position) / 2;\n        const prevSpace = Math.abs(position - prevPosition);\n        const nextPosition = i + diff > textData.length - 1 ? textData.length === 1 || !this._range ? rangeOuter[1] : (position - textData[i - diff].position) / 2 - position : position - (position - textData[i + diff].position) / 2;\n        const nextSpace = Math.abs(position - nextPosition);\n        return min([prevSpace, nextSpace]) * 2;\n      }\n    }\n\n    /**\n     * Pre-calculates the size of the title, if defined, in order\n     * to adjust the internal margins.\n     */\n    if (this._title) {\n      const {fontFamily, fontSize, lineHeight} = this._titleConfig;\n      const titleWrap = textWrap()\n        .fontFamily(typeof fontFamily === \"function\" ? fontFamily() : fontFamily)\n        .fontSize(typeof fontSize === \"function\" ? fontSize() : fontSize)\n        .lineHeight(typeof lineHeight === \"function\" ? lineHeight() : lineHeight)\n        .width(range[range.length - 1] - range[0] - p * 2)\n        .height(this[`_${height}`] - this._tickSize - p * 2);\n      const lines = titleWrap(this._title).lines.length;\n      margin[this._orient] = lines * titleWrap.lineHeight() + p;\n    }\n\n    let hBuff = this._shape === \"Circle\"\n          ? typeof this._shapeConfig.r === \"function\" ? this._shapeConfig.r({tick: true}) : this._shapeConfig.r\n          : this._shape === \"Rect\"\n            ? typeof this._shapeConfig[height] === \"function\" ? this._shapeConfig[height]({tick: true}) : this._shapeConfig[height]\n            : this._tickSize,\n        wBuff = tickGet({tick: true});\n\n    if (typeof hBuff === \"function\") hBuff = max(ticks.map(hBuff));\n    if (this._shape === \"Rect\") hBuff /= 2;\n    if (typeof wBuff === \"function\") wBuff = max(ticks.map(wBuff));\n    if (this._shape !== \"Circle\") wBuff /= 2;\n\n    const {fontFamily, fontSize} = this._shapeConfig.labelConfig;\n\n    /**\n     * Calculates the space each label would take up, given\n     * the provided this._space size.\n     */\n    let textData = labels\n      .map((d, i) => {\n\n        const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n              fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n              position = this._getPosition(d);\n\n        const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n        return {d, i, fF, fS, lineHeight, position};\n\n      });\n\n    /**\n     * Calculates the text wrapping and size of a given textData object.\n     * @param {Object} datum\n     */\n    function calculateLabelSize(datum) {\n      const {d, i, fF, fS, rotate, space} = datum;\n\n      const h = rotate ? \"width\" : \"height\",\n            w = rotate ? \"height\" : \"width\";\n\n      const wSize = min([this._maxSize, this._width]);\n      const hSize = min([this._maxSize, this._height]);\n\n      const wrap = textWrap()\n        .fontFamily(fF)\n        .fontSize(fS)\n        .lineHeight(this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : undefined)\n        [w](horizontal ? space : wSize - hBuff - p - this._margin.left - this._margin.right)\n        [h](horizontal ? hSize - hBuff - p - this._margin.top - this._margin.bottom : space);\n\n      const res = wrap(tickFormat(d));\n      res.lines = res.lines.filter(d => d !== \"\");\n\n      res.width = res.lines.length ? Math.ceil(max(res.widths)) + fS / 4 : 0;\n      if (res.width % 2) res.width++;\n\n      res.height = res.lines.length ? Math.ceil(res.lines.length * wrap.lineHeight()) + fS / 4 : 0;\n      if (res.height % 2) res.height++;\n\n      return res;\n\n    }\n\n    /** Calculates label offsets */\n    function calculateOffset(arr = []) {\n      let offset = 0;\n\n      arr.forEach(datum => {\n        const prev = arr[datum.i - 1];\n\n        const h = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"width\" : \"height\",\n              w = datum.rotate && horizontal || !datum.rotate && !horizontal ? \"height\" : \"width\";\n\n        if (!prev) {\n          offset = 1;\n        }\n        else if (prev.position + prev[w] / 2 > datum.position - datum[w] / 2) {\n          if (offset) {\n            datum.offset = prev[h];\n            offset = 0;\n          }\n          else offset = 1;\n        }\n      });\n    }\n\n    textData = textData\n      .map(datum => {\n        datum.rotate = this._labelRotation;\n        datum.space = calculateSpace.bind(this)(datum);\n        const res = calculateLabelSize.bind(this)(datum);\n        return Object.assign(res, datum);\n      });\n\n    const offsetEnabled = this._labelOffset && textData.some(d => d.truncated);\n\n    if (this._labelRotation) {\n      textData = textData\n        .map(datum => {\n          datum.rotate = true;\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n    }\n    else if (offsetEnabled) {\n\n      textData = textData\n        .map(datum => {\n\n          datum.space = calculateSpace.bind(this)(datum, 2);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(datum, res);\n        });\n\n      calculateOffset.bind(this)(textData);\n\n    }\n\n    /**\n     * \"spillover\" will contain the pixel spillover of the first and last label,\n     * and then adjust the scale range accordingly.\n     */\n    const spillover = [0, 0];\n    for (let index = 0; index < 2; index++) {\n      const datum = textData[index ? textData.length - 1 : 0];\n      if (!datum) break;\n      const {height, position, rotate, width} = datum;\n      const compPosition = index ? rangeOuter[1] : rangeOuter[0];\n      const halfSpace = (rotate || !horizontal ? height : width) / 2;\n      const spill = index ? position + halfSpace - compPosition : position - halfSpace - compPosition;\n      spillover[index] = spill;\n    }\n\n    const first = range[0];\n    const last = range[range.length - 1];\n    const newRange = [first - spillover[0], last - spillover[1]];\n    if (this._range) {\n      if (this._range[0] !== undefined) newRange[0] = this._range[0];\n      if (this._range[this._range.length - 1] !== undefined) newRange[1] = this._range[this._range.length - 1];\n    }\n\n    if (newRange[0] !== first || newRange[1] !== last) {\n      setScale.bind(this)(newRange);\n\n      textData = labels\n        .map((d, i) => {\n\n          const fF = typeof fontFamily === \"function\" ? fontFamily(d, i) : fontFamily,\n                fS = typeof fontSize === \"function\" ? fontSize(d, i) : fontSize,\n                position = this._getPosition(d);\n\n          const lineHeight = this._shapeConfig.lineHeight ? this._shapeConfig.lineHeight(d, i) : fS * 1.4;\n          return {d, i, fF, fS, lineHeight, position};\n\n        });\n\n      textData = textData\n        .map(datum => {\n          datum.rotate = this._labelRotation;\n          datum.space = calculateSpace.bind(this)(datum, offsetEnabled ? 2 : 1);\n          const res = calculateLabelSize.bind(this)(datum);\n          return Object.assign(res, datum);\n        });\n      calculateOffset.bind(this)(textData);\n    }\n\n    const labelHeight = max(textData, t => t.height) || 0;\n    this._labelRotation = horizontal && this._labelRotation === undefined\n      ? textData.some(datum => {\n        const {i, height, position, truncated} = datum;\n        const prev = textData[i - 1];\n        return truncated || i && prev.position + prev.height / 2 > position - height / 2;\n      }) : this._labelRotation;\n\n    const globalOffset = this._labelOffset ? max(textData, d => d.offset || 0) : 0;\n    textData.forEach(datum => datum.offset = datum.offset ? globalOffset : 0);\n\n    const tBuff = this._shape === \"Line\" ? 0 : hBuff;\n    const bounds = this._outerBounds = {\n      [height]: (max(textData, t => Math.ceil(t[t.rotate || !horizontal ? \"width\" : \"height\"] + t.offset)) || 0) + (textData.length ? p : 0),\n      [width]: rangeOuter[rangeOuter.length - 1] - rangeOuter[0],\n      [x]: rangeOuter[0]\n    };\n\n    bounds[height] = max([this._minSize, bounds[height]]);\n\n    margin[this._orient] += hBuff;\n    margin[opposite] = this._gridSize !== undefined ? max([this._gridSize, tBuff]) : this[`_${height}`] - margin[this._orient] - bounds[height] - p;\n    bounds[height] += margin[opposite] + margin[this._orient];\n    bounds[y] = this._align === \"start\" ? this._padding\n      : this._align === \"end\" ? this[`_${height}`] - bounds[height] - this._padding\n      : this[`_${height}`] / 2 - bounds[height] / 2;\n\n    const group = elem(`g#d3plus-Axis-${this._uuid}`, {parent});\n    this._group = group;\n\n    const grid = elem(\"g.grid\", {parent: group}).selectAll(\"line\")\n      .data((this._gridSize !== 0 ? this._grid || this._scale === \"log\" && !this._gridLog ? labels : ticks : []).map(d => ({id: d})), d => d.id);\n\n    grid.exit().transition(t)\n      .attr(\"opacity\", 0)\n      .call(this._gridPosition.bind(this))\n      .remove();\n\n    grid.enter().append(\"line\")\n        .attr(\"opacity\", 0)\n        .attr(\"clip-path\", `url(#${clipId})`)\n        .call(this._gridPosition.bind(this), true)\n      .merge(grid).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._gridPosition.bind(this));\n\n    const labelOnly = labels.filter((d, i) => textData[i].lines.length && !ticks.includes(d));\n\n    const rotated = textData.some(d => d.rotate);\n\n    let tickData = ticks.concat(labelOnly)\n      .map(d => {\n\n        const data = textData.find(td => td.d === d);\n\n        const xPos = this._getPosition(d);\n        const space = data ? data.space : 0;\n        const lines = data ? data.lines.length : 1;\n        const lineHeight = data ? data.lineHeight : 1;\n\n        const labelOffset = data && this._labelOffset ? data.offset : 0;\n\n        const labelWidth = horizontal ? space : bounds.width - margin[this._position.opposite] - hBuff - margin[this._orient] + p;\n\n        const offset = margin[opposite],\n              size = (hBuff + labelOffset) * (flip ? -1 : 1),\n              yPos = flip ? bounds[y] + bounds[height] - offset : bounds[y] + offset;\n\n        const tickConfig = {\n          id: d,\n          labelBounds: rotated && data\n            ? {\n              x: -data.width / 2 + data.fS / 4,\n              y: this._orient === \"bottom\" ? size + p + (data.width - lineHeight * lines) / 2 : size - p * 2 - (data.width + lineHeight * lines) / 2,\n              width: data.width,\n              height: data.height\n            } : {\n              x: horizontal ? -space / 2 : this._orient === \"left\" ? -labelWidth - p + size : size + p,\n              y: horizontal ? this._orient === \"bottom\" ? size + p : size - p - labelHeight : -space / 2,\n              width: horizontal ? space : labelWidth,\n              height: horizontal ? labelHeight : space\n            },\n          rotate: data ? data.rotate : false,\n          size: labels.includes(d) ? size : this._data.find(t => +t === d) ? Math.ceil(size / 2) : 0,\n          text: labels.includes(d) ? tickFormat(d) : false,\n          tick: ticks.includes(d),\n          [x]: xPos + (this._scale === \"band\" ? this._d3Scale.bandwidth() / 2 : 0),\n          [y]: yPos\n        };\n\n        return tickConfig;\n\n      });\n\n    if (this._shape === \"Line\") {\n      tickData = tickData.concat(tickData.map(d => {\n        const dupe = Object.assign({}, d);\n        dupe[y] += d.size;\n        return dupe;\n      }));\n    }\n\n    new shapes[this._shape]()\n      .data(tickData)\n      .duration(this._duration)\n      .labelConfig({\n        ellipsis: d => d && d.length ? `${d}...` : \"\",\n        rotate: d => d.rotate ? -90 : 0\n      })\n      .select(elem(\"g.ticks\", {parent: group}).node())\n      .config(this._shapeConfig)\n      .render();\n\n    const bar = group.selectAll(\"line.bar\").data([null]);\n\n    bar.enter().append(\"line\")\n        .attr(\"class\", \"bar\")\n        .attr(\"opacity\", 0)\n        .call(this._barPosition.bind(this))\n      .merge(bar).transition(t)\n        .attr(\"opacity\", 1)\n        .call(this._barPosition.bind(this));\n\n    this._titleClass\n      .data(this._title ? [{text: this._title}] : [])\n      .duration(this._duration)\n      .height(margin[this._orient])\n      .rotate(this._orient === \"left\" ? -90 : this._orient === \"right\" ? 90 : 0)\n      .select(elem(\"g.d3plus-Axis-title\", {parent: group}).node())\n      .text(d => d.text)\n      .verticalAlign(\"middle\")\n      .width(range[range.length - 1] - range[0])\n      .x(horizontal ? range[0] : this._orient === \"left\" ? bounds.x + margin.left / 2 - (range[range.length - 1] - range[0]) / 2 : bounds.x + bounds.width - margin.right / 2 - (range[range.length - 1] - range[0]) / 2)\n      .y(horizontal ? this._orient === \"bottom\" ? bounds.y + bounds.height - margin.bottom : bounds.y : range[0] + (range[range.length - 1] - range[0]) / 2 - margin[this._orient] / 2)\n      .config(this._titleConfig)\n      .render();\n\n    this._lastScale = this._getPosition.bind(this);\n\n    if (callback) setTimeout(callback, this._duration + 100);\n\n    return this;\n\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the horizontal alignment to the specified value and returns the current class instance.\n      @param {String} [*value* = \"center\"] Supports `\"left\"` and `\"center\"` and `\"right\"`.\n      @chainable\n  */\n  align(_) {\n    return arguments.length ? (this._align = _, this) : this._align;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the axis line style and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  barConfig(_) {\n    return arguments.length ? (this._barConfig = Object.assign(this._barConfig, _), this) : this._barConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc An array of data points, which helps determine which ticks should be shown and which time resolution should be displayed.\n      @param {Array} [*value*]\n      @chainable\n  */\n  data(_) {\n    return arguments.length ? (this._data = _, this) : this._data;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale domain of the axis and returns the current class instance.\n      @param {Array} [*value* = [0, 10]]\n      @chainable\n  */\n  domain(_) {\n    return arguments.length ? (this._domain = _, this) : this._domain;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the transition duration of the axis and returns the current class instance.\n      @param {Number} [*value* = 600]\n      @chainable\n  */\n  duration(_) {\n    return arguments.length ? (this._duration = _, this) : this._duration;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  grid(_) {\n    return arguments.length ? (this._grid = _, this) : this._grid;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid config of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  gridConfig(_) {\n    return arguments.length ? (this._gridConfig = Object.assign(this._gridConfig, _), this) : this._gridConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid behavior of the axis when scale is logarithmic and returns the current class instance.\n      @param {Boolean} [*value* = false]\n      @chainable\n  */\n  gridLog(_) {\n    return arguments.length ? (this._gridLog = _, this) : this._gridLog;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the grid size of the axis and returns the current class instance.\n      @param {Number} [*value* = undefined]\n      @chainable\n  */\n  gridSize(_) {\n    return arguments.length ? (this._gridSize = _, this) : this._gridSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall height of the axis and returns the current class instance.\n      @param {Number} [*value* = 100]\n      @chainable\n  */\n  height(_) {\n    return arguments.length ? (this._height = _, this) : this._height;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the visible tick labels of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  labels(_) {\n    return arguments.length ? (this._labels = _, this) : this._labels;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether offsets will be used to position some labels further away from the axis in order to allow space for the text.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelOffset(_) {\n    return arguments.length ? (this._labelOffset = _, this) : this._labelOffset;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets whether whether horizontal axis labels are rotated -90 degrees.\n      @param {Boolean} [*value* = false]\n      @chainable\n   */\n  labelRotation(_) {\n    return arguments.length ? (this._labelRotation = _, this) : this._labelRotation;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the maximum size allowed for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  maxSize(_) {\n    return arguments.length ? (this._maxSize = _, this) : this._maxSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the minimum size alloted for the space that contains the axis tick labels and title.\n      @param {Number}\n      @chainable\n   */\n  minSize(_) {\n    return arguments.length ? (this._minSize = _, this) : this._minSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *orient* is specified, sets the orientation of the shape and returns the current class instance. If *orient* is not specified, returns the current orientation.\n      @param {String} [*orient* = \"bottom\"] Supports `\"top\"`, `\"right\"`, `\"bottom\"`, and `\"left\"` orientations.\n      @chainable\n  */\n  orient(_) {\n    if (arguments.length) {\n\n      const horizontal = [\"top\", \"bottom\"].includes(_),\n            opps = {top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\"};\n\n      this._position = {\n        horizontal,\n        width: horizontal ? \"width\" : \"height\",\n        height: horizontal ? \"height\" : \"width\",\n        x: horizontal ? \"x\" : \"y\",\n        y: horizontal ? \"y\" : \"x\",\n        opposite: opps[_]\n      };\n\n      return this._orient = _, this;\n\n    }\n    return this._orient;\n  }\n\n  /**\n      @memberof Axis\n      @desc If called after the elements have been drawn to DOM, will returns the outer bounds of the axis content.\n      @example\n{\"width\": 180, \"height\": 24, \"x\": 10, \"y\": 20}\n  */\n  outerBounds() {\n    return this._outerBounds;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the padding between each tick label to the specified number and returns the current class instance.\n      @param {Number} [*value* = 10]\n      @chainable\n  */\n  padding(_) {\n    return arguments.length ? (this._padding = _, this) : this._padding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the inner padding of band scale to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingInner(_) {\n    return arguments.length ? (this._paddingInner = _, this) : this._paddingInner;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the outer padding of band scales to the specified number and returns the current class instance.\n      @param {Number} [*value* = 0.1]\n      @chainable\n  */\n  paddingOuter(_) {\n    return arguments.length ? (this._paddingOuter = _, this) : this._paddingOuter;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale range (in pixels) of the axis and returns the current class instance. The given array must have 2 values, but one may be `undefined` to allow the default behavior for that value.\n      @param {Array} [*value*]\n      @chainable\n  */\n  range(_) {\n    return arguments.length ? (this._range = _, this) : this._range;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the scale of the axis and returns the current class instance.\n      @param {String} [*value* = \"linear\"]\n      @chainable\n  */\n  scale(_) {\n    return arguments.length ? (this._scale = _, this) : this._scale;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the \"padding\" property of the scale, often used in point scales.\n      @param {Number} [*value* = 0.5]\n      @chainable\n  */\n  scalePadding(_) {\n    return arguments.length ? (this._scalePadding = _, this) : this._scalePadding;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *selector* is specified, sets the SVG container element to the specified d3 selector or DOM element and returns the current class instance. If *selector* is not specified, returns the current SVG container element.\n      @param {String|HTMLElement} [*selector* = d3.select(\"body\").append(\"svg\")]\n      @chainable\n  */\n  select(_) {\n    return arguments.length ? (this._select = select(_), this) : this._select;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick shape constructor and returns the current class instance.\n      @param {String} [*value* = \"Line\"]\n      @chainable\n  */\n  shape(_) {\n    return arguments.length ? (this._shape = _, this) : this._shape;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick style of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  shapeConfig(_) {\n    return arguments.length ? (this._shapeConfig = assign(this._shapeConfig, _), this) : this._shapeConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick formatter and returns the current class instance.\n      @param {Function} [*value*]\n      @chainable\n  */\n  tickFormat(_) {\n    return arguments.length ? (this._tickFormat = _, this) : this._tickFormat;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick values of the axis and returns the current class instance.\n      @param {Array} [*value*]\n      @chainable\n  */\n  ticks(_) {\n    return arguments.length ? (this._ticks = _, this) : this._ticks;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the tick size of the axis and returns the current class instance.\n      @param {Number} [*value* = 5]\n      @chainable\n  */\n  tickSize(_) {\n    return arguments.length ? (this._tickSize = _, this) : this._tickSize;\n  }\n\n  /**\n      @memberof Axis\n      @desc Sets the behavior of the abbreviations when you are using linear scale. This method accepts two options: \"normal\" (uses formatAbbreviate to determinate the abbreviation) and \"smallest\" (uses suffix from the smallest tick as reference in every tick).\n      @param {String} [*value* = \"normal\"]\n      @chainable\n  */\n  tickSuffix(_) {\n    return arguments.length ? (this._tickSuffix = _, this) : this._tickSuffix;\n  }\n\n  /**\n      @memberof Axis\n      @desc Defines a custom locale object to be used in time scale. This object must include the following properties: dateTime, date, time, periods, days, shortDays, months, shortMonths. For more information, you can revise [d3p.d3-time-format](https://github.com/d3/d3-time-format/blob/master/README.md#timeFormatLocale).\n      @param {Object} [*value* = undefined]\n      @chainable\n  */\n  timeLocale(_) {\n    return arguments.length ? (this._timeLocale = _, this) : this._timeLocale;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title of the axis and returns the current class instance.\n      @param {String} [*value*]\n      @chainable\n  */\n  title(_) {\n    return arguments.length ? (this._title = _, this) : this._title;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the title configuration of the axis and returns the current class instance.\n      @param {Object} [*value*]\n      @chainable\n  */\n  titleConfig(_) {\n    return arguments.length ? (this._titleConfig = Object.assign(this._titleConfig, _), this) : this._titleConfig;\n  }\n\n  /**\n      @memberof Axis\n      @desc If *value* is specified, sets the overall width of the axis and returns the current class instance.\n      @param {Number} [*value* = 400]\n      @chainable\n  */\n  width(_) {\n    return arguments.length ? (this._width = _, this) : this._width;\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisBottom\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn below the horizontal domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisBottom extends Axis {\n\n  /**\n      @memberof AxisBottom\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"bottom\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisLeft\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the left of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisLeft extends Axis {\n\n  /**\n      @memberof AxisLeft\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"left\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisRight\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn to the right of the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisRight extends Axis {\n\n  /**\n      @memberof AxisRight\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"right\");\n  }\n\n}\n","import {default as Axis} from \"./Axis\";\n\n/**\n    @class AxisTop\n    @extends Axis\n    @desc Shorthand method for creating an axis where the ticks are drawn above the vertical domain path. Extends all functionality of the base [Axis](#Axis) class.\n*/\nexport default class AxisTop extends Axis {\n\n  /**\n      @memberof AxisTop\n      @desc Invoked when creating a new class instance, and overrides any default parameters inherited from Axis.\n      @private\n  */\n  constructor() {\n    super();\n    this.orient(\"top\");\n  }\n\n}\n"],"names":["d","constructor","Date","Number","length","s","dayFormat","RegExp","exec","year","indexOf","replace","substring","date","setFullYear","strFormat","quarterPrefix","quarterSuffix","quarter","toLowerCase","includes","dateTime","time","periods","days","shortDays","months","shortMonths","floorPow","Math","pow","floor","log10","calculateTicks","scale","useData","tickScale","scales","scaleSqrt","domain","range","negativeRange","size","abs","step","_scale","_data","dataExtent","extent","distance","reduce","n","i","arr","dist","Infinity","newStep","round","min","ticks","Axis","_align","_barConfig","_domain","_duration","_gridConfig","_gridLog","_height","_labelOffset","_labelRotation","orient","_outerBounds","width","height","x","y","_padding","_paddingInner","_paddingOuter","_scalePadding","_shape","_shapeConfig","fill","tick","label","text","labelBounds","labelConfig","fontColor","fontFamily","TextBox","fontResize","fontSize","constant","padding","textAnchor","rtl","detectRTL","_orient","verticalAlign","r","stroke","strokeWidth","_tickSize","_tickSuffix","_tickUnit","_timeLocale","undefined","_titleClass","_titleConfig","colorDefaults","dark","_width","bar","_position","opposite","offset","_margin","position","x1mod","_d3Scale","bandwidth","x2mod","sortedDomain","_d3ScaleNegative","concat","sort","a","b","call","attrize","attr","_getPosition","reverse","labels","bind","lines","last","_lastScale","xDiff","xPos","id","callback","_select","select","append","node","timeLocale","locale","_locale","timeFormatDefaultLocale","format","horizontal","clipId","_uuid","flip","p","parent","rangeOuter","t","transition","duration","tickValue","tickGet","margin","top","right","bottom","left","tickFormat","_tickFormat","isNaN","formatDate","map","formatLocale","separator","suffixes","suff","number","formatAbbreviate","toString","setScale","newRange","_range","slice","minRange","maxRange","sizeInner","buckets","d3Range","scaleTicks","d3Ticks","_ticks","_labels","pad","ceil","charAt","toUpperCase","paddingInner","paddingOuter","smallestNumber","copy","percentScale","scaleLinear","leftPercentage","zero","smallestPositive","filter","smallestNegative","smallestPosPow","smallestNegPow","_getTicks","_getLabels","tens","substr","some","splice","pixels","_availableTicks","forEach","closest","push","_visibleTicks","calculateSpace","datum","diff","prevPosition","textData","prevSpace","nextPosition","nextSpace","_title","lineHeight","titleWrap","textWrap","hBuff","wBuff","max","fF","fS","calculateLabelSize","rotate","space","h","w","wSize","_maxSize","hSize","wrap","res","widths","calculateOffset","prev","Object","assign","offsetEnabled","truncated","spillover","index","compPosition","halfSpace","spill","first","labelHeight","globalOffset","tBuff","bounds","_minSize","_gridSize","group","elem","_group","grid","selectAll","data","_grid","exit","_gridPosition","remove","enter","merge","labelOnly","rotated","tickData","find","td","labelOffset","labelWidth","yPos","tickConfig","dupe","shapes","ellipsis","config","render","_barPosition","setTimeout","_","arguments","opps","BaseClass","AxisBottom","AxisLeft","AxisRight","AxisTop"],"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"}